<?php

/**
 * @file
 * Provides an example payment method for Drupal Commerce for testing and
 *   development.
 */


/**
 * Implements hook_commerce_payment_method_info().
 */
function stripe_commerce_commerce_payment_method_info() {
  $payment_methods = array();
  $payment_methods['stripe'] = array(
    'base' => 'stripe_commerce',
    'title' => t('Stripe Commerce - Credit Card'),
    'short_title' => t('Stripe'),
    'display_title' => t('Credit card'),
    'description' => t('Stripe Payment Gateway'),
  );

  return $payment_methods;
}

/**
 * Payment method callback: submit form.
 */
function stripe_commerce_submit_form($payment_method, $pane_values, $checkout_pane, $order) {
  $form = array();

  // Merge in values from the order.
  if (!empty($order->data['commerce_payment_example'])) {
    $pane_values += $order->data['commerce_payment_example'];
  }

  // Merge in default values.
  $pane_values += array(
    'name' => '',
  );

  $form = stripe_form_default_items();
  return $form;
}

/**
 * Payment method callback: submit form validation.
 */
function stripe_commerce_submit_form_validate($payment_method, $pane_form, $pane_values, $order, $form_parents = array()) {
  dargs();
  //dpm($payment_method, 'payment method');
  //dpm($pane_form);
  //dpm($pane_values);
  //dpm($order);
  //dpm($form_parents);
  return FALSE;
}

/**
 * Payment method callback: submit form submission.
 */
function stripe_commerce_submit_form_submit($payment_method, $pane_form, $pane_values, $order, $charge) {
  $order->data['commerce_payment_example'] = $pane_values;

  //commerce_payment_example_transaction($payment_method, $order, $charge, $pane_values['name']);
}

/**
 * Creates an example payment transaction for the specified charge amount.
 *
 * @param $payment_method
 *   The payment method instance object used to charge this payment.
 * @param $order
 *   The order object the payment applies to.
 * @param $charge
 *   An array indicating the amount and currency code to charge.
 * @param $name
 *   The name entered on the submission form.
 */
function stripe_commerce_payment_transaction($payment_method, $order, $charge, $name) {
  $transaction = commerce_payment_transaction_new('commerce_payment_example', $order->order_id);
  $transaction->instance_id = $payment_method['instance_id'];
  $transaction->amount = $charge['amount'];
  $transaction->currency_code = $charge['currency_code'];
  $transaction->status = COMMERCE_PAYMENT_STATUS_SUCCESS;
  $transaction->message = 'Name: @name';
  $transaction->message_variables = array('@name' => $name);

  commerce_payment_transaction_save($transaction);
}
